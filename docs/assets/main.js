(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(e){if(e.ep)return;e.ep=!0;const r=n(e);fetch(e.href,r)}})();const y=async(t,o)=>{const n=new AbortController,{signal:s}=n,e=new Promise((u,g)=>{setTimeout(()=>{n.abort(),g(new Error(`Timeout exceeded for port ${t}.`))},o)}),r=fetch(`http://localhost:${t}`,{method:"GET",signal:s});if(!(await Promise.race([r,e]).catch(u=>{throw u})).ok)throw new Error(`Failed to connect to port ${t}.`);return t},P=async(t,o,n)=>{for(const s of t){const e={port:s,status:!1,message:""},r=await y(s,n).catch(a=>{e.message=a.message});if(r!==void 0&&(e.status=!0),o&&o(e),e.status)return r}return null},d=async(t,o)=>{let n=o==null?void 0:o.logger;(!n||n&&typeof n!="function")&&(n=null);let s=o==null?void 0:o.timeout;s||(s=2e3);const e={status:!1,port:null,message:""};if(!t||t.length===0||isNaN(t[0]))return e.message="No ports provided.",e;try{const r=await P(t,n,s);return r===null?(e.message="No available port found.",e):(e.status=!0,e.port=r,e)}catch(r){return e.message=r.message,e}},c=[7070,7071,8080,8081],b=async t=>await d(c,t);var v=document.getElementsByClassName("probe-btn"),h=document.getElementById("probe-default-port"),w=document.getElementById("probe-custom-port"),E=document.getElementById("default-port-range"),L=document.getElementById("custom-port-range"),f=document.getElementById("show-log"),l=document.getElementById("port-list"),i=document.getElementById("probe-logs");function m(t){l.innerText=t.join(", ")}function B(t){var o=document.createElement("div");o.textContent=`${t.port} ${t.status?"✅":"❌"}`,i.appendChild(o)}function I(){i.style.display="none",i.innerHTML=""}function O(){l.style.display="none",l.innerHTML=""}function N(t){return t.replace(/[\u3000\s\r\n\t]/g,"").replace(/，/g,",").replace(/[^0-9,]/g,"").replace(/^,+|,+$/g,"").replace(/,+/g,",")}function p(){return{logger:f.checked?B:null,timeout:1e3}}function T(){m(c);var t=p();b(t).then(async o=>{await new Promise(n=>setTimeout(n,100)),alert(`以100ms的超时阈值探测默认端口执行结果：${JSON.stringify(o)}`)})}function $(){var t=L.value,o=N(t),n=o.split(",").map(e=>parseInt(e));n.length>0&&!isNaN(n[0])&&m(n);var s=p();d(n,s).then(async e=>{await new Promise(r=>setTimeout(r,100)),e.status?alert(`成功探测到第一个运行中的端口号：${e.port}`):alert(`未探测到运行中的端口号，补充信息：${e.message}`)})}window.onload=function(){E.value=c.join(", "),Array.from(v).forEach(t=>{t.addEventListener("click",()=>{I(),O(),l.style.display="block",f.checked&&(i.style.display="block")})}),h.addEventListener("click",T),w.addEventListener("click",$)};
